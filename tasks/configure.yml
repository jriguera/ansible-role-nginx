---
- name: Create folders
  file:
    path: "{{ item }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0755
    state: directory
  with_items:
    - "{{ nginx_ssl_dir }}"
    - "{{ nginx_sites_dir }}"

- name: Create proxy cache path
  file:
    path: "{{ nginx_proxy_cache_path | first }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0755
    state: directory
  when: >
    nginx_proxy_cache_path is defined and
    not nginx_proxy_cache_path is none
  
- name: Create proxy temp path
  file:
    path: "{{ nginx_proxy_temp_path | first }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0755
    state: directory
  when: >
    nginx_proxy_temp_path is defined and
    not nginx_proxy_temp_path is none

- name: Create global nginx configuration
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_file }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0644
    validate: 'nginx -t -c %s'
  notify: reload nginx
  register: __nginx_updated_global

- name: Copy ssl certificate
  copy:
    src: "{{ nginx_ssl_certificate }}"
    dest: "{{ nginx_ssl_dir }}/{{ nginx_ssl_certificate | basename }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0640
  when: >
    nginx_ssl_certificate is defined and
    not nginx_ssl_certificate is none  
  tags: ["ssl"]

- name: Copy ssl certificate key
  copy:
    src: "{{ nginx_ssl_certificate_key }}"
    dest: "{{ nginx_ssl_dir }}/{{ nginx_ssl_certificate_key | basename }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0640
  when: >
    nginx_ssl_certificate_key is defined and
    not nginx_ssl_certificate_key is none  
  tags: ["ssl"]

- name: Checking if configuration was updated
  set_fact: >
    _nginx_updated="{{ __nginx_updated_global.changed }}"

- name: Ensure nginx is started and enabled on boot
  service: name="{{ nginx_daemon }}" state=started enabled="{{ nginx_enabled_on_startup | ternary('yes', 'no') }}"

